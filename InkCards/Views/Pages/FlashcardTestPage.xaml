<Page
    x:Class="InkCards.Views.Pages.FlashcardTestPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:interactions="using:Microsoft.Xaml.Interactions.Core"
    xmlns:controls="using:InkCards.Views.Controls"
    xmlns:converters="using:InkCards.Views.Infrastructure.Converters"
    mc:Ignorable="d"
    RequestedTheme="{x:Bind ViewModel.InMovieMode, Mode=OneWay, Converter={StaticResource TrueToDarkThemeConverter}}"
    Loaded="Page_Loaded">
    <Page.Resources>
        <Style
            x:Key="ActionButtonStyle"
            TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="FontSize" Value="72" />
            <Setter Property="Padding" Value="48" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Margin" Value="12" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Foreground" Value="{ThemeResource GreenBrush}" />
        </Style>

        <Style
            x:Key="CardTypeHintTextBlockStyle"
            TargetType="TextBlock"
            BasedOn="{StaticResource SubtleHintTextBlockStyle}">
            <Setter Property="Margin" Value="0 0 12 12" />
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
        </Style>

        <converters:FalseToVisibleConverter x:Key="FalseToVisibleConverter" />
        <converters:TrueToVisibleConverter x:Key="TrueToVisibleConverter" />
        <converters:LongToDoubleConverter x:Key="LongToDoubleConverter" />
        <converters:TrueToDarkThemeConverter x:Key="TrueToDarkThemeConverter" />

        <Storyboard x:Key="RevealCardStoryboard">
            <DoubleAnimation
                Duration="0:0:1.0"
                From="0"
                To="-180" 
                Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationX)" 
                Storyboard.TargetName="CardPreview">
                <DoubleAnimation.EasingFunction>
                    <BackEase EasingMode="EaseInOut" Amplitude="0.4"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>
    </Page.Resources>
    <Grid
        x:Name="LayoutRoot"
        Padding="{StaticResource PagePadding}"
        Background="{ThemeResource PageBackgroundBrush}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="ViewModeStates">
                <VisualState x:Name="DefaultState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="600" MinWindowHeight="600" />
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:Name="CompactOverlayState">
                    <VisualState.Setters>
                        <Setter Target="MainPanel.VerticalAlignment" Value="Stretch" />
                        <Setter Target="LayoutRoot.Padding" Value="0" />

                        <Setter Target="MovieModeButton.Visibility" Value="Collapsed" />
                        <Setter Target="OptionsBarPanel.VerticalAlignment" Value="Bottom" />

                        <Setter Target="RevealButton.Padding" Value="12" />
                        <Setter Target="RevealButton.Margin" Value="0" />
                        <Setter Target="RevealButton.VerticalAlignment" Value="Bottom" />
                        
                        <Setter Target="GuessedButtonsPanel.VerticalAlignment" Value="Bottom" />
                        <Setter Target="GuessedCorrectlyButton.Padding" Value="24 12" />
                        <Setter Target="GuessedCorrectlyButton.Margin" Value="0" />
                        <Setter Target="GuessedIncorrectlyButton.Padding" Value="24 12" />
                        <Setter Target="GuessedIncorrectlyButton.Margin" Value="0" />


                        <Setter Target="CardFrontTextBlock.HorizontalAlignment" Value="Left" />
                        <Setter Target="CardFrontTextBlock.FontSize" Value="14" />
                        <Setter Target="CardFrontTextBlock.Margin" Value="12" />
                        <Setter Target="CardFrontTextBlock.(Grid.Row)" Value="2" />
                        
                        <Setter Target="CardBackTextBlock.HorizontalAlignment" Value="Left" />
                        <Setter Target="CardBackTextBlock.FontSize" Value="14" />
                        <Setter Target="CardBackTextBlock.Margin" Value="12" />
                        <Setter Target="CardBackTextBlock.(Grid.Row)" Value="2" />
                    </VisualState.Setters>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowHeight="0" MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <StackPanel
            x:Name="TestTitlePanel"
            Grid.Row="0"
            Orientation="Horizontal"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Margin="0 -6 0 0">
            <Button
                Style="{StaticResource BackButtonStyle}"
                VerticalAlignment="Center"
                Foreground="{ThemeResource LightGrayBrush}"
                Click="{x:Bind ViewModel.End}">
                <StackPanel Orientation="Horizontal">
                    <FontIcon Glyph="&#xE09A;" FontSize="18" />
                </StackPanel>
            </Button>

            <TextBlock
                Style="{StaticResource TitleTextBlockStyle}"
                Foreground="{ThemeResource LightGrayBrush}"
                VerticalAlignment="Center"
                Text="{x:Bind ViewModel.Title, Mode=OneWay}"/>
        </StackPanel>

        <Grid 
            x:Name="MainPanel"
            HorizontalAlignment="Center"
            VerticalAlignment="Center">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <controls:CardPreview
                x:Name="CardPreview"
                Grid.Row="1"
                HorizontalAlignment="Stretch"
                Card="{x:Bind ViewModel.Card, Mode=OneWay}"
                Width="{StaticResource InkCardWidth}"
                Height="{StaticResource InkCardHeight}"
                BorderThickness="1"
                BorderBrush="{ThemeResource LightGrayBrush}"
                IsFlipped="{x:Bind ViewModel.IsFlipped, Mode=OneWay}"
                RequestedTheme="{x:Bind RequestedTheme, Mode=OneWay}"
                RenderManually="True">
                <controls:CardPreview.RenderTransform>
                    <CompositeTransform/>
                </controls:CardPreview.RenderTransform>
                <controls:CardPreview.Projection>
                    <PlaneProjection/>
                </controls:CardPreview.Projection>
                <interactivity:Interaction.Behaviors>
                    <interactions:EventTriggerBehavior EventName="Tapped">
                        <interactions:CallMethodAction
                            TargetObject="{x:Bind CardPreview}" 
                            MethodName="Flip"/>
                    </interactions:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
            </controls:CardPreview>

            <TextBlock
                x:Name="CardFrontTextBlock"
                Grid.Row="1"
                Style="{StaticResource CardTypeHintTextBlockStyle}"
                Text="Card Front"
                Visibility="{x:Bind ViewModel.IsFlipped, Mode=OneWay, Converter={StaticResource FalseToVisibleConverter}}"/>

            <TextBlock
                x:Name="CardBackTextBlock"
                Grid.Row="1"
                Style="{StaticResource CardTypeHintTextBlockStyle}"
                Text="Card Back"
                Visibility="{x:Bind ViewModel.IsFlipped, Mode=OneWay, Converter={StaticResource TrueToVisibleConverter}}"/>

            <Button 
                x:Name="RevealButton"
                Grid.Row="2"
                Click="{x:Bind ViewModel.Reveal}"
                Style="{StaticResource ActionButtonStyle}"
                Foreground="{ThemeResource DarkGrayBrush}"
                Visibility="{x:Bind ViewModel.IsRevealed, Mode=OneWay, Converter={StaticResource FalseToVisibleConverter}}"
                ToolTipService.ToolTip="Flip the card to reveal the other side.">
                <FontIcon 
                    x:Name="RevealIcon"
                    Glyph="&#xE052;" 
                    FontSize="36"  />
            </Button>

            <StackPanel
                x:Name="GuessedButtonsPanel"
                Grid.Row="2"
                HorizontalAlignment="Center"
                Orientation="Horizontal"
                Visibility="{x:Bind ViewModel.IsRevealed, Mode=OneWay, Converter={StaticResource TrueToVisibleConverter}}">
                <Button
                    x:Name="GuessedIncorrectlyButton"
                    Click="{x:Bind ViewModel.GuessedIncorrectly}"
                    Foreground="{ThemeResource LightGrayBrush}"
                    Style="{StaticResource ActionButtonStyle}"
                    ToolTipService.ToolTip="Still not sure.">
                    <FontIcon 
                        Glyph="&#xE106;" 
                        FontSize="30" />
                </Button>
                <Button
                    x:Name="GuessedCorrectlyButton"
                    Click="{x:Bind ViewModel.GuessedCorrectly}"
                    Style="{StaticResource ActionButtonStyle}"
                    ToolTipService.ToolTip="Knew it!">
                    <FontIcon 
                        Glyph="&#xE0E7;" 
                        FontSize="36" />
                </Button>
            </StackPanel>
        </Grid>

        <StackPanel
            x:Name="OptionsBarPanel"
            HorizontalAlignment="Right"
            VerticalAlignment="Top"
            Orientation="Horizontal">
            <Button
                x:Name="MovieModeButton"
                Style="{StaticResource IconButtonStyle}"
                Click="{x:Bind ViewModel.ToggleMovieMode}"
                ToolTipService.ToolTip="Dark Mode">
                <FontIcon 
                    Glyph="&#xE793;"
                    Foreground="{ThemeResource LightGrayBrush}"/>
            </Button>
            <Button
                x:Name="CompactOverlayModeButton"
                Style="{StaticResource IconButtonStyle}"
                Click="{x:Bind ToggleCompactOverlayMode}"
                ToolTipService.ToolTip="Compact Mode"
                Visibility="Collapsed">
                <Grid>
                    <FontIcon 
                        Glyph=""
                        Foreground="{ThemeResource LightGrayBrush}"
                        Visibility="{x:Bind IsInCompactOverlayMode, Mode=OneWay, Converter={StaticResource FalseToVisibleConverter}}"/>
                    <FontIcon 
                        Glyph="&#xE2B4;"
                        Foreground="{ThemeResource LightGrayBrush}"
                        Visibility="{x:Bind IsInCompactOverlayMode, Mode=OneWay, Converter={StaticResource TrueToVisibleConverter}}"/>
                </Grid>
                
            </Button>
        </StackPanel>
    </Grid>
</Page>